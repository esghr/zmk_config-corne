/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Aliases 
#define DE_CIRC GRAVE  // ^ (dead)
#define DE_SS   MINUS // ß
#define DE_ACUT PLUS  // ´ (dead)
#define DE_UE 	LBKT // Ü
#define DE_PLUS RBRC // +
#define DE_OE 	SEMI // Ö
#define DE_AE 	SQT // Ä
#define DE_HASH NUHS // #
#define DE_LABK NUBS // <
#define DE_MINS SLASH // -
#define DE_DEG  LS(DE_CIRC) // °
#define DE_EXLM LS(N1)    // !
#define DE_DQUO LS(N2)    // "
#define DE_SECT LS(N3)    // §
#define DE_DLR  LS(N4)    // $
#define DE_PERC LS(N5)    // %
#define DE_AMPR LS(N6)    // &
#define DE_SLSH LS(N7)    // /
#define DE_LPRN LS(N8)    // (
#define DE_RPRN LS(N9)    // )
#define DE_EQL  LS(N0)    // =
#define DE_QUES LS(DE_SS)   // ?
#define DE_GRV  LS(DE_ACUT) // ` (dead)
#define DE_ASTR LS(RBRC) // *
#define DE_QUOT LS(DE_HASH) // '
#define DE_RABK LS(DE_LABK) // >
#define DE_SCLN LS(COMMA) // ;
#define DE_COLN LS(DOT)  // :
#define DE_UNDS LS(DE_MINS) // _
#define DE_SUP2 RA(N2)    // ²
#define DE_SUP3 RA(N3)    // ³
#define DE_LCBR RA(N7)    // {
#define DE_LBRC RA(N8)    // [
#define DE_RBRC RA(N9)    // ]
#define DE_RCBR RA(N0)    // }
#define DE_BSLS RA(DE_SS)   // (backslash)
#define DE_AT   RA(Q)    // @
#define DE_EURO RA(E)    // €
#define DE_TILD RA(DE_PLUS) // ~
#define DE_PIPE RA(DE_LABK) // |
#define DE_MICR RA(M)    // µ

#define MO_TO(layer) &mo_to layer layer
#define KP_TO(layer) &kp_to layer layer
#define TO_KP(layer) &to_kp layer layer

/ {
    behaviors {
        mo_to: behavior_mo_to {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&to>;
        };
        kp_to: behavior_kp_to {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&to>;
        };
        to_kp: behavior_to_kp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&to>, <&kp>;
        };
    };
};

// Taste gedrückt halten: ()
// Taste doppelt drücken: []

// zum Anfang der Zeile springen: lL (lineLeft)
// zum Ende der Zeile springen: lR (lineRight)
// vor ein Wort springen: lW (left(of)Word)
// hinter ein Wort springen: rW (right(of)Word)
// zum Anfang der Seite springen: pU (pageUp)
// zum Ende der Seite springen: pD (pageDown)
// mo_to 1 4

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |ESC (TAB)|  Z  |  J   |  U  |  A  |  Q  |     |  P  |  B  |  M  |  L  |  F  |MO 4 BSPC |
// |   ß     |  C  |  S   |  I  |  E  |  O  |     |  D  |  T  |  N  |  R  |  H  |  Y  |
// |! (LGUI) |  V  |  X   |  Ü  |  Ä  |  Ö  |     |  W  |  G  |  ,  |  .  |  K  |(MO 5) ?|
//             |TO 3 (LCTRL)|ENT BSPC | SPC |     |SHFT |MO 1 TO 4 |MO 2 TO 2|

                        bindings = <
   &mt TAB ESC     &kp Z &kp J &kp U    &kp A       &kp Q       &kp P     &kp B      &kp M      &kp L    &kp F &lt 4 BSPC
   &kp Y           &kp C &kp S &kp I    &kp E       &kp O       &kp D     &kp T      &kp N      &kp R    &kp H &kp MINUS 
   &mt LGUI LS(N1) &kp V &kp X &kp LBKT &kp SQT     &kp SEMI    &kp W     &kp G      &kp COMMA  &kp DOT  &kp K &lt 5 LS(MINUS)
                   &kp_to LCTRL 3     &mt ENT BSPC  &kp SPACE   &kp LSHFT &mo 4      MO_TO(2) 
                        >;
                };
                raise_layer {
// -----------------------------------------------------------------------------------------
// | AT  |"|"(°)|  %  |  <  |  >  |DLR (EURO)|   |     |     |     |     |     |     |
// |  \  |  /   |  -  |  '  |  "  |  #       |   |     |     |     |     |     |     |
// |     |GRAVE |  _  | "|" |  *  |  =       |   |     |     |     |     |     |     | 
//                    |     |     |SPC       |   |     |     |     |
                        bindings = <
   &kp RA(Q)     &kp LS(DE_CIRC) &kp LS(N5)    &kp NUBS     &kp LS(NUBS) &kp RA(E)  &trans &trans &trans &trans &trans &trans
   &kp RA(MINUS) &kp LS(N7)      &kp SLASH     &kp LS(NUHS) &kp LS(N2)   &kp NUHS   &trans &trans &trans &trans &trans &trans
   &trans        &kp GRAVE       &kp LS(SLASH) &kp LS(N4)   &kp RBRC     &kp LS(N0) &trans &trans &trans &trans &trans &trans
                                               &trans       &trans       &kp SPACE  &trans &trans &trans
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  [  |  ]  |   HOME  | UP  |  pU     | MO 5|   |     |     |     |     |     |     |
// |  (  |  )  | LFT (wL)| DWN |RGT(word)| TO 2|   |     |     |     |     |     |     |
// |  {  |  }  |   END   | lL  |  pD     | lR  |   |     |     |     |     |     |     |
//               |CTRL TO 3|MO 1 BSPC|TO 4 SPC |   |TO 0 |     |     |
                        bindings = <
   &kp RA(N8) &kp RA(N9) &kp HOME                        &kp C_MENU_UP &mt LC(END) END                      &mo 5           &trans &trans &trans &trans &trans &trans  
   &kp LS(N8) &kp LS(N9) &mt LC(C_MENU_LEFT) C_MENU_LEFT &kp C_MENU_DOWN  &mt LC(C_MENU_RIGHT) C_MENU_RIGHT &to 2           &trans &trans &trans &trans &trans &trans 
   &kp RA(N7) &kp RA(N0) &kp END                         &kp LC(HOME)  &kp PG_DN                            &kp LC(END)     &trans &trans &trans &trans &trans &trans 
                                                         &kp_to LCTRL 3  &lt 1 BSPC                         &to_kp 4 SPACE   &to 0  &trans  &trans 
                        >;
                };
                one_hand_nav {
// -----------------------------------------------------------------------------------------
// | ESC |  Z  |  H  |  M  |  A  |MO 5      |   |     |     |     |     |     |     |
// | TAB |  C  |  S  |  L  |  E  |SHFT TO 2 |   |     |     |     |     |     |     |
// |LGUI |  V  |  X  |  W  |  T  |RALT      |   |     |     |     |     |     |     |
//                 |CTRL |MO 1 BSPC|TO 4 SPC|   |TO 0 |     |     |
                        bindings = <
   &kp ESC  &kp Z &kp H &kp M  &kp A &mo 5            &trans &trans &trans &trans &trans &trans  
   &kp TAB  &kp C &kp S &kp L  &kp E &kp_to LSHFT 2   &trans &trans &trans &trans &trans &trans 
   &kp LGUI &kp V &kp X &kp W  &kp T &kp RALT         &trans &trans &trans &trans &trans &trans 
         &kp LCTRL &lt 1 BSPC &to_kp 4 SPACE          &to 0 &trans &trans
                        >;
                };
                num_layer {
// -----------------------------------------------------------------------------------------
// |     |     |  7  |  8  |  9  |MO 5 |   |     |     |     |     |     |     |
// |     |     |  4  |  5  |  6  |TO 2 |   |     |     |     |     |     |     |
// |     |  0  |  1  |  2  |  3  |     |   |     |     |     |     |     |     |
//          |CTRL MO 1|MO 1 BSPC | SPC |   |TO 0 |     |     |
                        bindings = <
   &trans &trans &kp N7 &kp N8 &kp N9 &mo 5    &trans &trans &trans &trans &trans &trans  
   &trans &trans &kp N4 &kp N5 &kp N6 &to 2    &trans &trans &trans &trans &trans &trans 
   &trans &kp N0 &kp N1 &kp N2 &kp N3 &trans   &trans &trans &trans &trans &trans &trans 
        &kp_to LCTRL 3 &lt 1 BSPC &kp SPACE    &to 0 &trans &trans 
                        >;
                };
                F_layer {
// -----------------------------------------------------------------------------------------
// |     | F1  | F2  | F3  | F4  |     |   |     |     |     |     |     |     |
// |     | F5  | F6  | F7  | F8  |TO 4 |   |     |     |     |     |     |     |
// |     | F9  | F10 | F11 | F12 |     |   |     |     |     |     |     |     |
//               |CTRL TO 3|     | SPC |   |TO 0 |     |     |
                        bindings = <
   &trans &kp F1 &kp F2  &kp F3  &kp F4  &trans   &trans &trans &trans &trans &trans &trans  
   &trans &kp F6 &kp F6  &kp F7  &kp F8  &trans   &trans &trans &trans &trans &trans &trans 
   &trans &kp F9 &kp F10 &kp F11 &kp F12 &trans   &trans &trans &trans &trans &trans &trans 
                &kp_to LCTRL 3  &trans  &kp SPACE   &to 0  &trans &trans 
                        >;
                };
        };
};
