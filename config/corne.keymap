/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#define HOST_OS 1  // set to 1 for Linux, default is 0 (Windows)


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "helper.h"
#include "german.dtsi"
#include "keypos_42keys.h"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

ZMK_BEHAVIOR(hml, hold_tap,  // left-hand HRMs
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
)

ZMK_BEHAVIOR(hmr, hold_tap,  // right-hand HRMs
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
)
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  X  |  V  |  L  |  C  |  W  |   |  K  |  H   |  G  |  F  |  Q  | BKSP |
// |  GUI |  U  |  I  |  A  |  E  |  O  |   |  S  |  N   |  R  |  T  |  D  |  Y   |
// |  ALT |  Ü  |  Ö  |  Ä  |  P  |  Z  |   |  B  |  M   |  ,  |  .  |  J  | ESC  |
//                    | CTRL| LWR | SPC |   | SHFT| RSE  | ENT |
                        bindings = <
   &kp TAB  &kp X &kp V &kp L &kp C &kp W      &kp K &kp H  &kp G  &kp F   &kp Q &kp BSPC
   &kp LGUI &kp U &kp I &kp A &kp E &kp O      &kp S &kp N  &kp R  &kp T   &kp D &kp Y
   &kp LALT &ue_de &oe_de &ae_de &kp P &kp Z   &kp B &kp M  &kp COMMA &kp DOT &kp J &kp ESC
                  &kp LCTRL &mo 1 &kp SPACE    &kp LSHFT &mo 2 &kp RET
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  `   |  &  |  @  | UP  | EURO|  [  |   |  ]  |  !  |  $  |  =  |  *  |  +   |
// |  \   |  /  | LFT | DWN | RGT |  (  |   |  )  |  ?  |  °  |     |  :  |  -   |
// |  #   |  $  |  |  |  ~  |  %  |  {  |   |  }  |  _  |  "  |  '  |  ;  |  ^   |
//                    |     |     |  <  |   |  >  | RALT|     |
                        bindings = <
   &kp GRAVE  &kp AMPS     &kp AT          &kp C_MENU_UP   &kp N4           &kp LBKT         &kp RBKT &kp EXCL  &kp N8   &kp EQUAL &kp STAR  &kp PLUS
   &kp BSLH   &kp SLASH    &kp C_MENU_LEFT &bt C_MENU_DOWN &bt C_MENU_RIGHT &bt LPAR         &kp RPAR &kp QMARK &kp UP   &kp RIGHT &kp COLON &kp MINUS
   &kp HASH   &kp DLLR     &kp PIPE        &kp TILDE       &kp PRCNT        &kp LT           &kp RT   &kp UNDER &kp DQT  &kp SQT   &kp SEMI  &trans
                                           &trans          &trans           &kp LT           &kp RT   &kp RALT  &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  xi  | xi  | psi |labda| chi | tau |   |kappa|  7  |  8  |  9  |gamma|omega |
// | phi  |upsln| iota|alpha| epsi|omcrn|   | nu  |  4  |  5  |  6  |delta|sigma |
// |theta | rho | tau | eta |  pi |zeta |   | beta|  1  |  2  |  3  | mu  |      |
//                    |     |     |     |   |     |     |  0  |
                        bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans     &trans  &trans  &trans
                        >;
                };
        };
};
