/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Aliases 
#define DE_CIRC GRAVE  // ^ (dead)
#define DE_SS   MINUS // ß
#define DE_ACUT PLUS  // ´ (dead)
#define DE_UE 	LBKT // Ü
#define DE_PLUS RBRC // +
#define DE_OE 	SEMI // Ö
#define DE_AE 	SQT // Ä
#define DE_HASH NUHS // #
#define DE_LABK NUBS // <
#define DE_MINS SLASH // -
#define DE_DEG  LS(DE_CIRC) // °
#define DE_EXLM LS(N1)    // !
#define DE_DQUO LS(N2)    // "
#define DE_SECT LS(N3)    // §
#define DE_DLR  LS(N4)    // $
#define DE_PERC LS(N5)    // %
#define DE_AMPR LS(N6)    // &
#define DE_SLSH LS(N7)    // /
#define DE_LPRN LS(N8)    // (
#define DE_RPRN LS(N9)    // )
#define DE_EQL  LS(N0)    // =
#define DE_QUES LS(DE_SS)   // ?
#define DE_GRV  LS(DE_ACUT) // ` (dead)
#define DE_ASTR LS(RBRC) // *
#define DE_QUOT LS(DE_HASH) // '
#define DE_RABK LS(DE_LABK) // >
#define DE_SCLN LS(COMMA) // ;
#define DE_COLN LS(DOT)  // :
#define DE_UNDS LS(DE_MINS) // _
#define DE_SUP2 RA(N2)    // ²
#define DE_SUP3 RA(N3)    // ³
#define DE_LCBR RA(N7)    // {
#define DE_LBRC RA(N8)    // [
#define DE_RBRC RA(N9)    // ]
#define DE_RCBR RA(N0)    // }
#define DE_BSLS RA(DE_SS)   // (backslash)
#define DE_AT   RA(Q)    // @
#define DE_EURO RA(E)    // €
#define DE_TILD RA(DE_PLUS) // ~
#define DE_PIPE RA(DE_LABK) // |
#define DE_MICR RA(M)    // µ

#define MO_TO(layer) &mo_to layer layer
#define KP_TO(layer) &kp_to layer layer
#define TO_KP(layer) &to_kp layer layer

// Taste gedrückt halten: ()
// Taste doppelt drücken: []

// zum Anfang der Zeile springen: lL (lineLeft)
// zum Ende der Zeile springen: lR (lineRight)
// vor ein Wort springen: lW (left(of)Word)
// hinter ein Wort springen: rW (right(of)Word)
// zum Anfang der Seite springen: pU (pageUp)
// zum Ende der Seite springen: pD (pageDown)

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |ESC (TAB)|  Z  |  J   |  U  |  A  |  Q  |   |  P  |  B  |  M  |  L  |  F  | BSPC |
// |   ß     |  C  |  S   |  I  |  E  |  O  |   |  D  |  T  |  N  |  R  |  H  |  Y  |
// |! (LGUI) |  V  |  X   |  Ü  |  Ä  |  Ö  |   |  W  |  G  |  ,  |  .  |  K  |  ?  |
//                  |RET (LCTRL)|MO 2 | SPC |   |SHFT |MO 1 |BSPC (LALT)|

                        bindings = <
   &mt TAB ESC     &kp Y &kp J &kp U    &kp A   &kp Q       &kp P     &kp B &kp M      &kp L    &kp F &kp BSPC
   &kp Z           &kp C &kp S &kp I    &kp E   &kp O       &kp D     &kp T &kp N      &kp R    &kp H &kp MINUS 
   &mt LGUI LS(N1) &kp V &kp X &kp LBKT &kp SQT &kp SEMI    &kp W     &kp G &kp COMMA  &kp DOT  &kp K &kp LS(MINUS)
                            &mt LCTRL RET &mo 2 &kp SPACE   &kp LSHFT &mo 1 &mt LALT RET
                        >;
                };
                raise_layer {
// -----------------------------------------------------------------------------------------
// |   <    |  >  |  [  |  ]  |  &  |GRAVE|   |     |PG_UP|  UP | HOME|     |     |
// |   /    |  -  |  (  |  )  |  "  |  @  |   |     | LFT | DWN | RGT |     |     |
// |\ (LGUI)|  #  |  {  |  }  |  '  |  °  |   |     |PG_DN|     | END |     |     | 
//                |RET (LCTRL)|     | SPC |   |SHFT |     |BSPC (LALT)|
                        bindings = <
   &kp NUBS           &kp LS(NUBS) &kp RA(N8) &kp RA(N9) &kp LS(N6)   &kp GRAVE       &trans &kp PG_UP &kp C_MENU_UP &kp HOME &trans &trans
   &kp LS(N7)         &kp SLASH    &kp LS(N8) &kp LS(N9) &kp LS(N2)   &kp RA(Q)       &trans &kp C_MENU_LEFT &kp C_MENU_DOWN  &kp C_MENU_RIGHT &trans &trans
   &mt LGUI RA(MINUS) &kp NUHS     &kp RA(N7) &kp RA(N0) &kp LS(NUHS) &kp LS(GRAVE)   &trans &kp PG_DN &trans  &kp END &trans &trans
                                                     &mt LCTRL RET &trans &kp SPACE   &kp LSHFT &trans &mt LALT RET
                        >;
                };
                numF_layer {
// -----------------------------------------------------------------------------------------
// |   %    |  #  |  7  |  8  |  9  |     |   |     | F1  | F2  | F3  | F10 |     |
// |  EURO  |  =  |  4  |  5  |  6  |     |   |     | F4  | F5  | F6  | F11 |     |
// |$ (LGUI)|  0  |  1  |  2  |  3  |     |   |     | F7  | F8  | F9  | F12 |     |
//                |RET (LCTRL)|     | SPC |   |SHFT |     |BSPC (LALT)|
                        bindings = <
   &kp LS(N5)      &kp NUHS &kp N7 &kp N8 &kp N9 &trans    &trans &kp F1 &kp F2 &kp F3 &kp F10 &trans 
   &kp RA(E)       &kp LS(N0) &kp N4 &kp N5 &kp N6 &trans  &trans &kp F4 &kp F5 &kp F6 &kp F11 &trans
   &mt LGUI LS(N4) &kp N0 &kp N1 &kp N2 &kp N3 &trans      &trans &kp F7 &kp F8 &kp F9 &kp F12 &trans 
                          &mt LCTRL RET &trans &kp SPACE   &kp LSHFT &trans &mt LALT RET
                        >;
                };
        };
};
